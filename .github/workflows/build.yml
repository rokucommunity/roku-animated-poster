name: build
on: [push, pull_request]

jobs:
  ci:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-node@master
        with:
          node-version: "10.19.0"
      - run: npm ci
      - run: npm run validate
  npm-release:
    #only run this task for version-tagged releases
    if: startsWith(github.ref, 'refs/tags/v')
    needs: ci
    runs-on: ubuntu-18.04
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-node@master
        with:
          node-version: "10.19.0"
      - run: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ./.npmrc
      - run: npm ci
      
      #create npm package
      - run: npm pack

       #compute release version
      - name: Compute release version
        run: echo ::set-env name=RELEASE_VERSION::${GITHUB_REF##*/v}

      #create GitHub release
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@latest
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false

      #upload package to GitHub release
      - name: Upload package to GitHub release
        uses: AButler/upload-release-assets@v2.0
        with:
          files: '*.tgz'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          release-tag: v${{ env.RELEASE_VERSION }}
      
      #upload to npm
      - run: npm publish
